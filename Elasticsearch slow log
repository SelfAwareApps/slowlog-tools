[2016-03-23 06:43:47,231][DEBUG][index.search.slowlog.fetch] took[5.8ms], took_millis[5], types[talk], stats[], search_type[QUERY_THEN_FETCH], total_shards[5], source[{"query":{"match":{"tags":"Java"}}}], extra_source[]
[2013-11-15 13:17:22,770][TRACE][index.search.slowlog.query] [<node name>] [<index name>][<shard>] took[1.7ms], took_millis[1], types[sunrise], stats[], search_type[QUERY_THEN_FETCH], total_shards[2], source[{"query":{"match_all":{}},"size":10}], extra_source[],

[2013–08–26 20:57:33,856][WARN ][index.search.slowlog.fetch] [][][0] took[4.2s], took_millis[4207], types[emailOpen], stats[], search_type[QUERY_THEN_FETCH], total_shards[5], source[{“size”:500000,”facets”:{“dateFacet”:{“date_histogram”:{“field”:”createdAt”,”interval”:”minute”}}}}], extra_source[],

[2013–08–26 20:57:34,293][WARN ][index.search.slowlog.fetch] [][][4] took[4.6s], took_millis[4659], types[emailOpen], stats[], search_type[QUERY_THEN_FETCH], total_shards[5], source[{“size”:500000,”facets”:{“dateFacet”:{“date_histogram”:{“field”:”createdAt”,”interval”:”minute”}}}}], extra_source[]

import java.util.regex.Matcher;
import java.util.regex.Pattern;

final String regex = "^\\[(?<time>\\d{4}\\S\\d{2}\\S\\d{2}\\s? \\d{2}:\\d{2}:\\d{2},\\d{3})\\]\\s?\\[(?<severity>[A-Z]+\\s*)\\]\\s?\\[(?<source>[^\\]]*)\\]\\s?\\[(?<node>[^\\]]*)\\]\\s?\\[(?<index>[^\\]]*)\\]\\s?\\[(?<shard>[^\\]]*)\\]\\s?took\\[(?<took>[^\\]]+)\\],\\s?took_millis\\[(?<took_millis>[^\\]]+)\\],\\s?types\\[(?<types>[^\\]]+)\\],\\s?stats\\[(?<stats>[^\\]]*)\\],\\s?search_type\\[(?<search_types>[^\\]]+)\\],\\s?total_shards\\[(?<total_shards>[^\\]]+)\\],\\s?source(?<source_body>[^\\]]+)\\],\\s?extra_source\\[(?<extra_source>[^\\]]*)";
final String string = "[2013-11-15 13:17:22,770][TRACE][index.search.slowlog.query] [<node name>] [<index name>][<shard>] took[1.7ms], took_millis[1], types[sunrise], stats[], search_type[QUERY_THEN_FETCH], total_shards[2], source[{\"query\":{\"match_all\":{}},\"size\":10}], extra_source[],";

final Pattern pattern = Pattern.compile(regex);
final Matcher matcher = pattern.matcher(string);

while (matcher.find()) {
    System.out.println("Full match: " + matcher.group(0));
    for (int i = 1; i <= matcher.groupCount(); i++) {
        System.out.println("Group " + i + ": " + matcher.group(i));
    }
}
